<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
    mapper为映射的根节点，用来管理DAO接口
    namespace指定DAO接口的完整类名，表示mapper配置文件管理哪个DAO接口(包.接口名)
    mybatis会依据这个接口动态创建一个实现类去实现这个接口，而这个实现类是一个Mapper对象
 -->
<mapper namespace="com.coldwindx.server.mapper.CommitMapper">
    <sql id="columns">student_id, scene_id, score, `path`, create_time</sql>

    <select id="query" parameterType="com.coldwindx.server.entity.QueryParam" resultType="com.coldwindx.server.entity.form.Commit">
        SELECT id, <include refid="columns"/>, isdeleted FROM t_commit
        <where>
            isdeleted = 0
            <if test="condition.studentId != null and condition.studentId != ''">
                and student_id = #{condition.studentId}
            </if>
            <if test="condition.sceneId != null and condition.sceneId != ''">
                and scene_id = #{condition.sceneId}
            </if>
        </where>
        <if test="0 &lt; limit">limit #{limit} offset #{offset}</if>
    </select>

    <insert id="insert" parameterType="com.coldwindx.server.entity.form.Commit" keyProperty="id" useGeneratedKeys="true">
        insert into t_commit(<include refid="columns"/>) values (#{studentId}, #{sceneId}, #{score}, #{path},#{createTime});
    </insert>

    <update id="update" parameterType="com.coldwindx.server.entity.form.Commit">
        update t_commit set score = #{score} where student_id = #{studentId} and scene_id = #{sceneId}
    </update>
</mapper>